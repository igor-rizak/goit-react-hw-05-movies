{"version":3,"file":"static/js/home-page.74d603b6.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","API/get-trending.js","pages/HomePage.styled.js","pages/HomePage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { accentTextColor, mainTextColor } from 'utilities/variables/css';\n\nexport const Item = styled.li`\n  @media (max-width: 767px) {\n    margin-bottom: 50px;\n  }\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    width: calc((100% - 4 * 10px) / 2);\n    margin: 10px;\n  }\n  @media (min-width: 1440px) {\n    width: calc((100% - 6 * 10px) / 3);\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n  color: ${accentTextColor};\n  width: 300px;\n  margin-bottom: 15px;\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  margin-bottom: 15px;\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const VoteWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const VoteAverage = styled.p`\n  color: ${mainTextColor};\n`;\n\nexport const VoteCount = styled.p`\n  color: ${mainTextColor};\n`;\n\nexport const Value = styled.span`\n  font-weight: 700;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport posterBg from '../../utilities/images/poster.jpg';\nimport {\n  Item,\n  Title,\n  Poster,\n  VoteWrapper,\n  VoteAverage,\n  VoteCount,\n  Value,\n} from './MovieCard.styled';\n\nfunction MovieCard({ id, title, poster, voteAverage, voteCount }) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Title>{title ? title : 'Movie without a title'}</Title>\n        <Poster\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : posterBg}\n          alt={title}\n        />\n        <VoteWrapper>\n          <VoteAverage>\n            Vote average: <Value>{voteAverage}</Value>\n          </VoteAverage>\n          <VoteCount>\n            Vote count:<Value> {voteCount}</Value>\n          </VoteCount>\n        </VoteWrapper>\n      </Link>\n    </Item>\n  );\n}\n\nMovieCard.propTypes = {\n  id: propTypes.number,\n  title: propTypes.string,\n  poster: propTypes.string,\n  voteAverage: propTypes.number,\n  voteCount: propTypes.number,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.ul`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    margin: -10px;\n  }\n`;\n","import propTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { Wrapper } from './MoviesList.styled';\n\nfunction MoviesList({ movies }) {\n  return (\n    <Wrapper>\n      {movies.map(({ id, title, poster, voteAverage, voteCount }) => {\n        return (\n          <MovieCard\n            key={id}\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            voteCount={voteCount}\n          />\n        );\n      })}\n    </Wrapper>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      title: propTypes.string,\n      poster: propTypes.string,\n      voteAverage: propTypes.number,\n      voteCount: propTypes.number,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","async function getTrending() {\n  const key = 'fabdbd455cf8a28d4b9bd01e2909b151';\n  const url = 'https://api.themoviedb.org/3/trending/all/day';\n  const filter = `?api_key=${key}`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getTrending;","import styled from '@emotion/styled';\n\nexport const Trending = styled.h2`\n  margin-bottom: 25px;\n  margin-left: 25px;\n`;\n","import { useState, useEffect } from 'react';\nimport getTrending from 'API/get-trending';\nimport Container from 'components/Container/Container';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Trending } from './HomePage.styled';\nfunction HomePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    getTrending().then(({ results }) => {\n      const moviesArr = [];\n\n      results.map(\n        ({ id, original_title, poster_path, vote_average, vote_count }) => {\n          const movie = {\n            id,\n            title: original_title,\n            poster: poster_path,\n            voteAverage: vote_average,\n            voteCount: vote_count,\n          };\n\n          return moviesArr.push(movie);\n        }\n      );\n\n      setMovies(moviesArr);\n    });\n  }, []);\n\n  return (\n    movies && (\n      <Container>\n        <Trending>Trending today</Trending>\n        <MoviesList movies={movies} />\n      </Container>\n    )\n  );\n}\n\nexport default HomePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Item","styled","Title","accentTextColor","Poster","VoteWrapper","VoteAverage","mainTextColor","VoteCount","Value","id","title","poster","voteAverage","voteCount","location","useLocation","to","state","from","src","posterBg","alt","Wrapper","movies","map","getTrending","filter","fetch","response","json","data","Trending","useState","setMovies","useEffect","then","results","moviesArr","movie","original_title","poster_path","vote_average","vote_count","push","Container","MoviesList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}